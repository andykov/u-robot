@charset "UTF-8";
/*
Convert PX to REM
Использование:
padding: rem-calc(10);
padding: rem-calc(10 15 10 15);
*/
/*
Removes the unit (e.g. px, em, rem) from a value, returning the number only.
@param {Number} $num - Number to strip unit from.
@returns {Number} The same number, sans unit.
*/
/*
Converts one or more pixel values into matching rem values.
@param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.

@param {Number} $base [null] - The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$base-font-size` variable as the base.

@returns {List} A list of converted values.
*/
/*
Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.
@access private
@param {Number} $value - Pixel value to convert.
@param {Number} $base [null] - Base for pixel conversion.
@returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
*/
/*
Convert PX to REM
Использование:
padding: rem-calc(10);
padding: rem-calc(10 15 10 15);
*/
/*
Removes the unit (e.g. px, em, rem) from a value, returning the number only.
@param {Number} $num - Number to strip unit from.
@returns {Number} The same number, sans unit.
*/
/*
Converts one or more pixel values into matching rem values.
@param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.

@param {Number} $base [null] - The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$base-font-size` variable as the base.

@returns {List} A list of converted values.
*/
/*
Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.
@access private
@param {Number} $value - Pixel value to convert.
@param {Number} $base [null] - Base for pixel conversion.
@returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
*/
/*
Convert PX to REM
Использование:
padding: rem-calc(10);
padding: rem-calc(10 15 10 15);
*/
/*
Removes the unit (e.g. px, em, rem) from a value, returning the number only.
@param {Number} $num - Number to strip unit from.
@returns {Number} The same number, sans unit.
*/
/*
Converts one or more pixel values into matching rem values.
@param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.

@param {Number} $base [null] - The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$base-font-size` variable as the base.

@returns {List} A list of converted values.
*/
/*
Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.
@access private
@param {Number} $value - Pixel value to convert.
@param {Number} $base [null] - Base for pixel conversion.
@returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
*/
.page-order,
.page-order-create {
  background-color: #FAFAFA; }

.document-upload-section-files .col-lg-6 {
  display: flex;
  flex-direction: column; }
  @media screen and (min-width: 992px) {
    .document-upload-section-files .col-lg-6:first-of-type {
      padding-right: 5.138%; }
    .document-upload-section-files .col-lg-6:last-of-type {
      padding-left: 5.138%; } }

.document-upload-section-files .title {
  font-size: 1.57143rem;
  font-weight: 700;
  text-transform: none;
  padding-top: 8px;
  line-height: 30px;
  margin-bottom: 10px; }
  .document-upload-section-files .title sup {
    color: #84cd56;
    font-size: 1em;
    margin-left: 5px;
    top: 0; }

.document-load-trigger {
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative; }
  .document-load-trigger:before {
    content: '';
    background-color: rgba(74, 144, 226, 0);
    position: absolute;
    top: 0;
    right: -10px;
    bottom: 0;
    left: -10px;
    border: 2px dashed rgba(74, 144, 226, 0);
    z-index: 1;
    transition: background-color 0.3s, border 0.3s; }
  .document-load-trigger:hover {
    cursor: pointer; }
    .document-load-trigger:hover:before {
      background-color: rgba(74, 144, 226, 0.2);
      border: 2px dashed rgba(74, 144, 226, 0.7); }
  .document-load-trigger__zone {
    display: flex;
    padding: 10px;
    margin: auto 0 40px;
    height: 265px; }

.document-upload-files {
  padding-top: 10px; }
  @media screen and (min-width: 1296px) {
    .document-upload-files__col--driver {
      padding-right: 10.370%; }
    .document-upload-files__col--passport {
      padding-left: 10.370%; } }
  .document-upload-files__item {
    position: relative;
    text-align: center; }
    .document-upload-files__item--success .document-upload-files__icon-success {
      visibility: visible; }
    .document-upload-files__item--fail .document-upload-files__icon-fail {
      visibility: visible; }
  .document-upload-files__icon-success, .document-upload-files__icon-fail {
    visibility: hidden;
    position: absolute;
    left: 10px;
    bottom: 10px; }
  .document-upload-files .document-load-list-btn_del {
    position: absolute;
    right: 10px;
    bottom: 10px; }

.document-load-list-item_empty {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  width: 100%;
  height: 0;
  margin: auto; }

.document-load-list-item .document-load-list-doc {
  display: block;
  text-align: center; }
  @media screen and (max-width: 575px) {
    .document-load-list-item .document-load-list-doc {
      margin-bottom: 20px; } }
  .document-load-list-item .document-load-list-doc img {
    max-height: 240px; }

.document-load-list-item.user-driver-license {
  max-width: 240px;
  padding-top: 65%; }
  .document-load-list-item.user-driver-license--empty-1 {
    background-image: url("../../img/design/doc_vu_1.jpg"); }
  .document-load-list-item.user-driver-license--empty-2 {
    background-image: url("../../img/design/doc_vu_2.jpg"); }

.document-load-list-item.user-passport--empty-1 {
  max-width: 176px;
  padding-top: 98.454545%;
  background-image: url("../../img/design/doc_pas_1.jpg"); }

.document-load-list-item.user-passport--empty-2 {
  max-width: 234px;
  padding-top: 75.21368%;
  background-image: url("../../img/design/doc_pas_2.jpg"); }

.document-load-list {
  padding-top: 10px;
  padding-bottom: 30px; }
  .document-load-list .row {
    height: 100%; }
  .document-load-list .col-sm-6 {
    display: flex;
    flex-direction: column; }
    .document-load-list .col-sm-6 .btn-fake {
      margin-top: auto; }

.fancy-popup-body {
  text-align: center; }
