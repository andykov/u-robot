@charset "UTF-8";
/*
Convert PX to REM
Использование:
padding: rem-calc(10);
padding: rem-calc(10 15 10 15);
*/
/*
Removes the unit (e.g. px, em, rem) from a value, returning the number only.
@param {Number} $num - Number to strip unit from.
@returns {Number} The same number, sans unit.
*/
/*
Converts one or more pixel values into matching rem values.
@param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.

@param {Number} $base [null] - The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$base-font-size` variable as the base.

@returns {List} A list of converted values.
*/
/*
Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.
@access private
@param {Number} $value - Pixel value to convert.
@param {Number} $base [null] - Base for pixel conversion.
@returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
*/
/*
Convert PX to REM
Использование:
padding: rem-calc(10);
padding: rem-calc(10 15 10 15);
*/
/*
Removes the unit (e.g. px, em, rem) from a value, returning the number only.
@param {Number} $num - Number to strip unit from.
@returns {Number} The same number, sans unit.
*/
/*
Converts one or more pixel values into matching rem values.
@param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.

@param {Number} $base [null] - The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$base-font-size` variable as the base.

@returns {List} A list of converted values.
*/
/*
Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.
@access private
@param {Number} $value - Pixel value to convert.
@param {Number} $base [null] - Base for pixel conversion.
@returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
*/
/*
Convert PX to REM
Использование:
padding: rem-calc(10);
padding: rem-calc(10 15 10 15);
*/
/*
Removes the unit (e.g. px, em, rem) from a value, returning the number only.
@param {Number} $num - Number to strip unit from.
@returns {Number} The same number, sans unit.
*/
/*
Converts one or more pixel values into matching rem values.
@param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.

@param {Number} $base [null] - The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$base-font-size` variable as the base.

@returns {List} A list of converted values.
*/
/*
Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.
@access private
@param {Number} $value - Pixel value to convert.
@param {Number} $base [null] - Base for pixel conversion.
@returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
*/
.page-order,
.page-order-create {
  background-color: #FAFAFA; }

.box {
  background-color: #fff;
  padding: 18px 20px;
  border: 1px solid #F0F0F0;
  border-radius: 4px; }
  .box__heading {
    display: flex;
    justify-content: space-between; }
  .box__desc {
    color: #9D9D9D;
    font-size: 12px;
    line-height: 1.41667; }
  .box__cont {
    font-size: 12px; }
  .box__buttons {
    padding-top: 10px; }
  .box.active {
    border-color: #85CD57; }

.fancy-popup-body {
  padding: 45px 60px 45px 60px;
  text-align: center; }
  .fancy-popup-body__heading {
    padding-bottom: 30px; }

.fancy-popup .field-text {
  margin-bottom: 20px; }

.fancy-popup .field-note {
  font-size: 12px;
  padding-bottom: 20px; }
  .fancy-popup .field-note span {
    font-weight: 600; }

.user-account-edit .field-text,
.user-account-edit .field-select,
#user-account-main-confirm-email-form .field-text,
#user-account-main-confirm-email-form .field-select {
  margin-bottom: 20px; }

.user-account-edit .field-group__name,
.user-account-edit .field-text__name,
.user-account-edit .field-select__name,
.user-account-edit .field-textarea__name,
#user-account-main-confirm-email-form .field-group__name,
#user-account-main-confirm-email-form .field-text__name,
#user-account-main-confirm-email-form .field-select__name,
#user-account-main-confirm-email-form .field-textarea__name {
  color: #9e9e9e; }

.user-account-edit .field-text__name,
#user-account-main-confirm-email-form .field-text__name {
  font-size: 14px;
  line-height: 19px; }

.user-account-edit .field-text__input,
#user-account-main-confirm-email-form .field-text__input {
  border-color: #f0f0f0;
  border-width: 0 0 1px 0;
  border-radius: 0;
  font-size: 18px;
  font-weight: 600;
  color: #4a4a4a;
  padding: 8px 0 2px;
  line-height: 29px; }
  .user-account-edit .field-text__input:focus,
  #user-account-main-confirm-email-form .field-text__input:focus {
    background-color: #f9f9f9;
    border-color: #84cf55; }

.user-account-edit .field-text__input-wrap input.error,
#user-account-main-confirm-email-form .field-text__input-wrap input.error {
  background-color: rgba(247, 26, 53, 0.12);
  border-color: #f71a35; }

.user-account-edit .field-text__input-wrap span.error,
#user-account-main-confirm-email-form .field-text__input-wrap span.error {
  font-size: 12px;
  color: #f71a35; }

.user-account-edit .field-phone__status,
#user-account-main-confirm-email-form .field-phone__status {
  display: inline-block;
  vertical-align: top;
  font-size: 9px;
  font-weight: 600;
  color: #85CD57; }

.user-account-edit .field-confirm,
#user-account-main-confirm-email-form .field-confirm {
  display: inline-block;
  vertical-align: top; }
  .user-account-edit .field-confirm__btn,
  #user-account-main-confirm-email-form .field-confirm__btn {
    display: none; }
    .user-account-edit .field-confirm__btn a,
    #user-account-main-confirm-email-form .field-confirm__btn a {
      display: inline-block;
      vertical-align: top;
      font-size: 9px;
      font-weight: 600; }
  .user-account-edit .field-confirm__success,
  #user-account-main-confirm-email-form .field-confirm__success {
    font-size: 9px;
    font-weight: 600;
    vertical-align: top;
    color: #85cd57;
    margin-left: 3px;
    line-height: 1; }
  .user-account-edit .field-confirm.active .field-confirm__btn,
  #user-account-main-confirm-email-form .field-confirm.active .field-confirm__btn {
    display: inline-block; }
  .user-account-edit .field-confirm.active .field-confirm__success,
  #user-account-main-confirm-email-form .field-confirm.active .field-confirm__success {
    display: none; }

#account-nationality-field-block {
  display: none; }

.user-account-photo {
  padding-left: 15px; }
  .user-account-photo__img {
    position: relative;
    text-align: center;
    max-width: 210px;
    padding-top: 100%;
    background-color: #f0f0f0;
    overflow: hidden; }
    .user-account-photo__img .image {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      margin-bottom: 0; }
      .user-account-photo__img .image img {
        margin: auto;
        object-fit: cover;
        height: 100%;
        width: 100%; }
  .user-account-photo__add {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
  .user-account-photo__del {
    position: absolute;
    bottom: 3%;
    left: 50%;
    transform: translate(-50%, 0); }
    .user-account-photo__del.show {
      animation-duration: 1s;
      animation-fill-mode: both;
      animation-name: bounceInUp; }
